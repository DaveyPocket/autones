#include <avr/pgmspace.h>
#include <avr/io.h>
#include <avr/interrupt.h>

#define dataShift 2
#define dataMask (1 << dataShift)

#define debugPortDMask 0b11110000
#define debugPortBMask 0b00001111

// Off, A, B, sElect, Start, Up, Down, Left, Right
#define O (0 << 0)
#define A (1 << 0)
#define B (1 << 1)
#define E (1 << 2)
#define S (1 << 3)
#define U (1 << 4)
#define D (1 << 5)
#define L (1 << 6)
#define R (1 << 7)

#define HZ 60

uint8_t button_number;

PROGMEM const uint8_t buttons[] = {0,8,0,192,129,128,0,130,64,129,128,0,130,129,1,0,1,0,1,0,1,0,64,1,0,1,0,129,1,0,32,0,64,128,0,128,129,128,0,130,64,129,128,0,130,1,0,64,0,64,0,192,129,128,0,128,130,64,128,0,128,0,130,1,0,130,1,0,130,64,128,0,1,0,1,0,1,0,130,1,0,192,0,128,193,0,128,192,128,192,130,64,129,128,0,130,1,0,1,0,1,0,1,0,1,0,64,1,0,1,0,1,0,130,0,130,1,0,1,0,130,128,1,0,1,0,1,0,1,0,1,0,130,1,0,130,64,65,1,0,128,0,1,0,130,1,0,1,0,64,1,0,1,0,1,0,1,0,1,0,130,0,130,1,0,1,0,1,0,1,0,1,0,130,1,0,64,1,0,128,129,128,0,192,0,1,0,1,0,192,130,128,192,130,192,128,192,128,192,128,192,130,129,128,0,130,128,192,65,64,66,128,65,64,0,32,0,192,129,128,0,130,64,129,1,0,130,1,0,130,1,0,1,0,130,1,0,130,64,1,0,130,1,0,130,1,0,130,129,1,0,64,1,0,1,0,130,1,0,64,1,0,130,1,0,130,128,130,128,129,1,0,64,1,0,130,1,0,1,0,130,0,128,129,0,1,0,64,1,0,1,0,130,1,0,1,0,130,64,129,1,0,130,1,0,64,129,1,0,192,0,193,0,128,0,128,192,130,192,130,64,129,1,0,1,0,1,0,130,1,0,1,0,1,0,1,0,64,1,0,1,0,128,0,1,0,1,0,130,129,0,64,0,1,0,1,0,192,130,128,192,130,1,0,130,64,1,129,1,0,130,128,0,130,128,1,0,64,1,0,1,0,130,65,1,0,128,0,192,0,32,0,192,129,128,0,130,64,129,1,0,1,0,130,2,130,2,130,1,0,64,1,0,1,0,130,129,1,0,64,129,1,0,130,1,0,130,192,0,64,0,66,128,65,64,0,66,64,1,0,32,0,192,129,128,0,130,64,129,1,0,130,1,0,1,0,130,2,130,129,1,0,64,129,1,0,128,0,130,128,64,0,128,130,128,130,128,64,0,128,130,128,130,128,64,0,130,128,130,128,1,0,64,129,1,0,1,0,1,0,130,0,130,128,1,0,64,1,0,130,1,0,1,0,130,0,128,0,128,64,0,1,0,130,1,0,1,0,64,1,0,1,0,130,128,0,64,1,0,130,1,0,64,1,0,130,0,130,1,0,128,130,64,0,128,130,128,0,128,64,0,130,128,64,0,1,0,1,0,130,128,0,130,129,1,0,130,128,64,1,0,130,1,0,64,1,0,130,1,0,64,1,0,1,0,130,1,0,130,128,1,0,130,64,1,0,130,128,64,130,128,64,130,128,64,128,129,128,0,130,128,64,0,130,128,0,130,1,0,1,0,130,128,64,1,0,130,1,0,64,1,0,130,1,0,130,0,1,0,64,1,129,1,0,1,0,128,130,1,0,64,0,128,65,0,128,0,192,129,128,0,130,64,129,128,0,130,129,1,0,1,0,64,1,0,130,128,1,0,130,128,129,1,0,64,1,0,130,1,0,130,64,1,0,1,0,130,128,0,130,128,1,0,128,130,0,1,0,64,1,0,1,0,130,1,0,1,0,64,1,0,1,0,130,0,130,128,0,1,129,1,0,1,0,64,0,1,0,64,65,1,128,0,128,130,1,0,64,1,0,1,0,1,0,130,128,1,0,130,128,64,0,130,1,0,64,0,192,0,64,0,64,129,128,0,128,65,64,0,128,129,128,0,128,0,128,65,128,0,128,130,192,128,192,128,192,130,128,64,128,64,129,1,0,128,0,128,0,128,0,128,0,128,0,128,0,128,0,192,129,128,0,130,64,129,1,0,130,128,0,128,129,1,0,64,0,1,0,130,1,0,1,0,130,0,128,0,129,1,0,64,1,0,130,128,129,1,0,64,1,0,130,128,0,64,0,130,129,1,0,64,1,0,130,1,0,1,0,130,0,128,64,1,0,1,0,130,128,1,0,1,0,130,128,64,1,129,1,0,130,2,130,1,0,1,0,64,1,0,130,1,0,64,1,0,1,0,130,0,128,1,0,1,0,64,1,0,130,1,0,130,128,0,130,0,128,64,1,0,64,0,192,129,128,0,130,64,129,1,0,1,0,130,128,1,0,130,64,128,64,128,64,128,64,128,64,130,64,128,64,128,64,128,64,130,64,128,64,128,64,128,64,130,64,128,64,128,64,128,64,130,64,128,64,128,64,128,64,130,64,128,64,128,64,128,64,130,64,128,64,128,64,128,64,130,64,128,1,0,64,0,130,1,0,64,1,0,1,0,130,128,0,128,129,1,0,1,0,32,0,192,129,128,0,130,64,128,0,1,0,130,128,0,128,1,0,1,0,64,129,1,0,130,128,0,128,1,0,64,129,1,65,1,0,1,128,192,0,32,0,192,129,128,0,128,130,64,129,1,0,130,128,0,128,0,130,128,0,130,64,129,1,0,64,192,65,64,66,128,65,64,0,66,32,0,192,128,192,193,1,0,129,0,1,0,193,1,0,129,1,0,193,1,0,1,0,129,0,193,0,129,0,1,0,193,0,129,0,193,0,129,0,193,0,129,0,193,0,129,0,193,0,129,0,193,0,129,0,193,0,129,0,1,0,193,1,128,0,192,129,128,0,130,64,128,0,130,1,0,1,0,64,1,0,130,0,128,1,0,130,64,1};
PROGMEM const uint16_t frames[] = {42,1,154,1,1,19,1,1,1,1,7,13,38,2,16,41,4,18,1,11,18,34,1,13,13,30,53,1,14,14,1,91,3,5,1,25,10,4,4,1,1,2,7,14,1,1,17,11,1,1,284,1,1,15,1,4,1,1,5,1,3,4,9,3,34,21,1,9,13,1,1,2,10,12,2,9,2,17,1,1,49,1,1,1,1,1200,34,2,1,1,1,1,6,5,18,1,4,33,1,16,5,14,1,16,1,24,1,1,9,1,32,18,11,10,3,6,1,20,9,44,1,3,1,5,1,3,1,3,1,20,3,34,10,3,19,16,1,1,16,1,1,21,13,18,1,3,21,9,44,1,31,13,31,21,1,28,1,28,6,8,13,16,27,5,30,1,33,1,38,9,20,1,17,17,19,21,1,1,6,3,5,2,5,1,6,1,3,1,2,4,1,9,3,1,1,1,1,1,1,1,1,53,2,1,36,1,2,1,5,24,1,1,6,3,19,1,215,1,1,19,1,1,1,8,24,25,39,6,8,12,9,32,5,22,44,9,24,73,1,31,10,9,3,35,45,2,21,36,2,10,6,1,3,20,26,31,1,15,38,1,32,9,1,8,40,1,9,1,4,2,29,9,1,6,39,38,3,20,3,19,45,1,1,1,9,32,33,1,1,20,1,20,1,1,20,30,26,96,1,1,15,9,1,8,10,1,1,15,51,1,2,1,1,1,1160,34,2,1,1,1,1,8,7,26,1,20,1,20,1,5,22,1,5,1,3,1,3,1,1,3,1,2,1,2,1,4,1,3,1,4,11,1,6,1,3,1,6,1,1,9,11,123,3,19,12,1,2,1,13,12,1,8,1,1,1,10,33,1,19,14,16,9,1,1,2,1,1,35,1,4,1,75,1,1,19,1,1,1,8,6,26,12,6,3,1,2,1,1,28,34,1,17,10,6,9,34,4,12,42,1,3,4,9,1,2,17,62,1,9,25,3,1,1,3,5,16,1,1,3,20,1,210,1,1,19,1,1,1,8,15,26,1,1,35,7,54,29,1,1,1,11,6,1,1,5,67,1,2,1,8,1,1,2,1,9,1,4,1,1,2,1,9,1,5,1,2,1,9,1,5,1,35,1,1,10,55,12,6,8,28,17,17,1,1,31,10,1,5,38,1,25,10,20,35,9,1,2,1,2,1,12,3,36,1,1,48,31,13,1,13,52,12,6,1,8,20,1,21,11,1,1,36,1,24,41,1,4,27,9,18,2,55,1,1,2,1,5,1,2,1,3,1,8,1,2,6,38,1,9,1,7,12,51,1,10,25,1,4,1,1,48,1,6,8,1,17,22,1,17,84,1,1,35,14,40,1,13,9,1,3,9,40,23,1,27,26,1,3,3,1,3,3,1,3,3,2,1,1,8,1,6,1,17,1,7,13,25,9,24,9,24,1,3,1,8,39,1,8,51,1,13,25,35,1,9,11,2,2,21,1,3,1,11,9,1,8,1,1,8,53,1,1,1,1,1,1,635,1,1,19,1,1,1,1,7,13,39,1,12,17,1,9,1,11,21,1,7,28,69,1,7,3,1,22,1,28,41,36,4,48,19,1,12,6,15,34,1,8,12,1,7,24,6,1,1,30,4,18,1,2,11,4,45,1,6,23,5,30,1,6,8,22,31,1,12,1,7,1,1,2,18,12,1,28,1,2,18,24,3,2,10,1,1,4,1,22,35,1,1,62,13,30,4,17,1,1,7,28,1,8,1,16,19,21,6,1,12,1,1,14,1,13,6,9,6,1,10,5,6,1,6,4,1,6,4,1,2,4,1,6,1,1,2,1,3,2,1,2,2,3,2,1,2,2,1,5,1,5,1,5,1,5,1,5,1,5,1,664,1,1,19,1,1,1,8,24,25,11,1,1,1,1,19,6,1,12,28,41,1,6,8,32,37,27,1,2,1,1,11,6,1,12,41,1,8,1,3,29,1,18,14,1,1,12,1,9,51,4,7,25,1,26,6,1,32,37,12,6,8,1,2,1,6,23,8,25,1,5,15,26,6,54,1,8,1,1,1,29,37,39,1,3,1,31,27,14,1,30,49,18,1,32,1,3,19,5,14,1,1,2,1,20,2,9,1,1,9,1,1,9,1,8,1,1,1,2,1,32,13,1,737,1,1,19,9,1,1,8,22,38,17,18,1,1,32,33,1,1,1,1,1,1,1,1,1,1,9,1,1,1,1,1,1,1,9,1,1,1,1,1,1,1,9,1,1,1,1,1,1,1,9,1,1,1,1,1,1,1,9,1,1,1,1,1,1,1,9,1,1,1,1,1,1,1,9,1,1,7,15,1,43,1,6,8,1,7,35,22,15,2,7,1,1,1,2,18,2,9,1,170,1,1,19,1,1,1,8,5,7,10,1,2,1,2,1,47,1,9,1,3,1,30,1,3,1,1,32,25,1,11,11,1,2,4,2,9,7,2,1,170,1,1,14,1,5,1,1,17,13,14,1,2,1,2,1,1,8,11,11,1,1,13,15,11,1,5,24,1,1,6,3,5,1,1,170,1,16,5,7,1,52,1,55,1,57,1,12,28,1,15,82,1,21,15,1,41,1,38,1,29,1,38,1,40,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,17,1,45,1,28,1,174,1,1,19,1,1,1,9,4,1,3,13,22,46,1,18,15,37,1,1,32,25,1,1,6};

uint16_t movie_size = sizeof(buttons);
uint16_t index = 0;

uint16_t frame = frames[0];
uint8_t button = ~(buttons[0]);

int main(void) {
  DDRB |= debugPortBMask;
  DDRD |= debugPortDMask;
  DDRC |= 0b00000100; // pinMode(A2, OUTPUT)
  EICRA = 0b00001111; // INT0,INT1 RISING
  EIMSK = 0b00000011; // Enable INT0, INT1
  PORTC |= dataMask;  // digitalWrite(A2, HIGH)
  sei(); // enable interrupts

  while(1){ };
  return 1;
}

// latch
ISR(INT0_vect) {
  button_number = 0;
  if(frame == 0 && index < movie_size - 1){
    index++;
    //frame = frames[index];
    frame = pgm_read_word_near(frames + index);
  }
  //button = ~(buttons[index]);
  button = ~(pgm_read_byte_near(buttons + index));
  PORTD = (PORTD & ~debugPortDMask) | (~button & debugPortDMask);
  PORTB = (PORTB & ~debugPortBMask) | (~button & debugPortBMask);
  PORTC = (PORTC & ~dataMask) | ((button & 1) << dataShift);
  frame--;
}

// clock
ISR(INT1_vect) {
  button_number++;
  button >>= 1;
  if(button_number < 8){
    PORTC = (PORTC & ~dataMask) | ((button & 1) << dataShift);	
  } else {
    PORTC = (PORTC & ~dataMask) | (1 << dataShift);	
  }

}
