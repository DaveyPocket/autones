#include <avr/pgmspace.h>
#include <avr/io.h>
#include <avr/interrupt.h>

#define ARRAY_SIZE(array) (sizeof((array))/sizeof((array[0])))

#define dataShift 2
#define dataMask (1 << dataShift)

#define debugPortDMask 0b11110000
#define debugPortBMask 0b00001111

// Off, A, B, sElect, Start, Up, Down, Left, Right
#define O (0 << 0)
#define A (1 << 0)
#define B (1 << 1)
#define E (1 << 2)
#define S (1 << 3)
#define U (1 << 4)
#define D (1 << 5)
#define L (1 << 6)
#define R (1 << 7)

#define HZ 60

uint8_t button_number;

struct frame {
  uint16_t length;
  uint8_t buttons;
};
// a movie is how many frames * what buttons to press
// happylee-supermariobros,warped
struct frame movie[] = {{42,0},{1,8},{154,0},{1,192},{1,129},{19,128},{1,0},{1,130},{1,64},{1,129},{7,128},{13,0},{38,130},{2,129},{16,1},{41,0},{4,1},{18,0},{1,1},{11,0},{18,1},{34,0},{1,64},{13,1},{13,0},{30,1},{53,0},{1,129},{14,1},{14,0},{1,32},{91,0},{3,64},{5,128},{1,0},{25,128},{10,129},{4,128},{4,0},{1,130},{1,64},{2,129},{7,128},{14,0},{1,130},{1,1},{17,0},{11,64},{1,0},{1,64},{284,0},{1,192},{1,129},{15,128},{1,0},{4,128},{1,130},{1,64},{5,128},{1,0},{3,128},{4,0},{9,130},{3,1},{34,0},{21,130},{1,1},{9,0},{13,130},{1,64},{1,128},{2,0},{10,1},{12,0},{2,1},{9,0},{2,1},{17,0},{1,130},{1,1},{49,0},{1,192},{1,0},{1,128},{1,193},{1200,0},{34,128},{2,192},{1,128},{1,192},{1,130},{1,64},{6,129},{5,128},{18,0},{1,130},{4,1},{33,0},{1,1},{16,0},{5,1},{14,0},{1,1},{16,0},{1,1},{24,0},{1,64},{1,1},{9,0},{1,1},{32,0},{18,1},{11,0},{10,130},{3,0},{6,130},{1,1},{20,0},{9,1},{44,0},{1,130},{3,128},{1,1},{5,0},{1,1},{3,0},{1,1},{3,0},{1,1},{20,0},{3,1},{34,0},{10,130},{3,1},{19,0},{16,130},{1,64},{1,65},{16,1},{1,0},{1,128},{21,0},{13,1},{18,0},{1,130},{3,1},{21,0},{9,1},{44,0},{1,64},{31,1},{13,0},{31,1},{21,0},{1,1},{28,0},{1,1},{28,0},{6,1},{8,0},{13,130},{16,0},{27,130},{5,1},{30,0},{1,1},{33,0},{1,1},{38,0},{9,1},{20,0},{1,1},{17,0},{17,130},{19,1},{21,0},{1,64},{1,1},{6,0},{3,128},{5,129},{2,128},{5,0},{1,192},{6,0},{1,1},{3,0},{1,1},{2,0},{4,192},{1,130},{9,128},{3,192},{1,130},{1,192},{1,128},{1,192},{1,128},{1,192},{1,128},{1,192},{53,130},{2,129},{1,128},{36,0},{1,130},{2,128},{1,192},{5,65},{24,64},{1,66},{1,128},{6,65},{3,64},{19,0},{1,32},{215,0},{1,192},{1,129},{19,128},{1,0},{1,130},{1,64},{8,129},{24,1},{25,0},{39,130},{6,1},{8,0},{12,130},{9,1},{32,0},{5,1},{22,0},{44,130},{9,1},{24,0},{73,130},{1,64},{31,1},{10,0},{9,130},{3,1},{35,0},{45,130},{2,1},{21,0},{36,130},{2,129},{10,1},{6,0},{1,64},{3,1},{20,0},{26,1},{31,0},{1,130},{15,1},{38,0},{1,64},{32,1},{9,0},{1,130},{8,1},{40,0},{1,130},{9,128},{1,130},{4,128},{2,129},{29,1},{9,0},{1,64},{6,1},{39,0},{38,130},{3,1},{20,0},{3,1},{19,0},{45,130},{1,0},{1,128},{1,129},{9,0},{32,1},{33,0},{1,64},{1,1},{20,0},{1,1},{20,0},{1,130},{1,1},{20,0},{30,1},{26,0},{96,130},{1,64},{1,129},{15,1},{9,0},{1,130},{8,1},{10,0},{1,64},{1,129},{15,1},{51,0},{1,192},{2,0},{1,193},{1,0},{1,128},{1160,0},{34,128},{2,192},{1,130},{1,192},{1,130},{1,64},{8,129},{7,1},{26,0},{1,1},{20,0},{1,1},{20,0},{1,130},{5,1},{22,0},{1,1},{5,0},{1,1},{3,0},{1,1},{3,0},{1,64},{1,1},{3,0},{1,1},{2,0},{1,128},{2,0},{1,1},{4,0},{1,1},{3,0},{1,130},{4,129},{11,0},{1,64},{6,0},{1,1},{3,0},{1,1},{6,0},{1,192},{1,130},{9,128},{11,192},{123,130},{3,1},{19,0},{12,130},{1,64},{2,1},{1,129},{13,1},{12,0},{1,130},{8,128},{1,0},{1,130},{1,128},{10,1},{33,0},{1,64},{19,1},{14,0},{16,1},{9,0},{1,130},{1,65},{2,1},{1,0},{1,128},{35,0},{1,192},{4,0},{1,32},{75,0},{1,192},{1,129},{19,128},{1,0},{1,130},{1,64},{8,129},{6,1},{26,0},{12,1},{6,0},{3,130},{1,2},{2,130},{1,2},{1,130},{28,1},{34,0},{1,64},{17,1},{10,0},{6,1},{9,0},{34,130}};

uint16_t movie_size = ARRAY_SIZE(movie);
uint16_t index = 0;

uint16_t framesLeft = movie[0].length;
uint8_t buttons = ~(movie[0].buttons);

int main(void) {
  DDRB |= debugPortBMask;
  DDRD |= debugPortDMask;
  DDRC |= 0b00000100; // pinMode(A2, OUTPUT)
  EICRA = 0b00001111; // INT0,INT1 RISING
  EIMSK = 0b00000011; // Enable INT0, INT1
  PORTC |= dataMask;  // digitalWrite(A2, HIGH)
  sei(); // enable interrupts

  while(1){ };
  return 1;
}

// latch
ISR(INT0_vect) {
  button_number = 0;
  if(framesLeft == 0 && index < movie_size - 1){
    index++;
    framesLeft = movie[index].length;
  }
  buttons = ~(movie[index].buttons);
  PORTD = (PORTD & ~debugPortDMask) | (~buttons & debugPortDMask);
  PORTB = (PORTB & ~debugPortBMask) | (~buttons & debugPortBMask);
  PORTC = (PORTC & ~dataMask) | ((buttons & 1) << dataShift);
  framesLeft--;
}

// clock
ISR(INT1_vect) {
  button_number++;
  buttons >>= 1;
  if(button_number < 8){
    PORTC = (PORTC & ~dataMask) | ((buttons & 1) << dataShift);	
  } else {
    PORTC = (PORTC & ~dataMask) | (1 << dataShift);	
  }

}
